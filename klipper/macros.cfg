#
#
# THIS FILE CONTAINS ALL THE MACROS
#
#

[display_status]
[pause_resume]

[gcode_macro _TEMP_MESH]
description: Calibrates bed on a given bed temp
gcode:
    G28 X Y
    G28 Z
    M190 S{ params.S }
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE="{ params.S }"

[gcode_macro COMMON_TEMPS_MESH]
description: Calibrates mesh for 50 and 60 degrees
gcode:
    {% for temp in [50, 60, 70] %}
    _TEMP_MESH S={ temp }    
    {% endfor %}
    SAVE_CONFIG

[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-1 F2700
    PARK_TOOLHEAD
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state 

[gcode_macro G28]
rename_existing: C28
gcode: CUSTOM_G28{' X=X' if params.X is defined}{' Y=Y' if params.Y is defined}{' Z=Z' if params.Z is defined}

[force_move]
enable_force_move: True

[gcode_macro CUSTOM_G28]
gcode:
    SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} SQUARE_CORNER_VELOCITY={printer.toolhead.square_corner_velocity} ACCEL_TO_DECEL={printer.toolhead.max_accel_to_decel}
    {action_respond_info("Homing %s%s%s" % (params.X|d(''), params.Y|d(''), params.Z|d('')))}
    G90
    #QUERY_ENDSTOPS
    #{% if printer.query_endstops.last_query["z"] != "TRIGGERED" %}
    FORCE_MOVE STEPPER=stepper_z DISTANCE=5 VELOCITY=20
    #{% endif %}
  
    {% if (params.X is defined and params.Y is defined and params.Z is defined) or (params.X is not defined and params.Y is not defined and params.Z is not defined) %}
      C28 Y
      C28 X
      C28 Z
      G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} Z30 F21000
    {% elif (params.X is defined and params.Y is defined and params.Z is not defined) %}
      C28 Y
      C28 X
    {% elif (params.X is defined and params.Y is not defined and params.Z is not defined) %}
      C28 X
    {% elif (params.X is not defined and params.Y is defined and params.Z is not defined) %}
      C28 Y
    {% elif (params.X is not defined and params.Y is not defined and params.Z is defined) %}
      C28 Z
    {% endif %}

[gcode_macro START_PRINT]
description: Sequence of actions before printing
gcode:
  M104 S{params.FIRST_LAYER_EXT_TEMP} ; set nozzle temp
  M140 S{params.FIRST_LAYER_BED_TEMP} ; set bed temp

  SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} VELOCITY={printer.configfile.settings.printer.max_velocity}
  SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={printer.configfile.settings.extruder.pressure_advance} SMMOTH_TIME={printer.configfile.settings.extruder.pressure_advance_smooth_time}

  G90 ; absolute positioning
  {% if printer.toolhead.homed_axes == "xyz" %}
  ;  GET_TO_WIPER
    ;G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} Z50 F21000
  {% else %}
    G28
    
  {% endif %}
  GET_TO_WIPER
  
  M190 S{params.FIRST_LAYER_BED_TEMP} ; wait for bed temp
  M109 S{params.FIRST_LAYER_EXT_TEMP} ; wait for nozzle temp
  BED_MESH_PROFILE LOAD={params.FIRST_LAYER_BED_TEMP}

  M83  ; extruder relative mode
  WIPE_NOZZLE ; Wipe before re-Z-tting

  G91 
  G28 Z ; re-home after warming up the bed and loading bed mesh
  
  G0 X0.5 Y10 Z2 F3000 ; don't blob all over me
  M83
  G1 E10 F400 ; blob me harder
  M82
  G4 P2000 ; wait for it to finish blobbing
  G0 X2 Y12 F3000 ; don't ruin our blob

  G92 E0 ; set current extruder (filament) position as 0
  M107 ; turn off extruder fan for the first layer
  

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  PARK_TOOLHEAD

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####  
  {% set extrude = printer['gcode_macro PARK_TOOLHEAD'].extrude %}

  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {% else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####

  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  
  RESUME_BASE {get_params}

[gcode_macro FINISH_PRINT]
description: Sequence of actions after printing has finished
gcode:
  M107 ; turn off fan
  M104 S0 ; turn off nozzle heating
  M140 S0 ; turn off bed heating
  G91 ; relative positioning
  G1 E-0.5 F300  ; retract the filament a bit before lifting the nozzle, to release some of the pressure
  G0 F6000
  G90 ; absolute positioning
  {% if printer.toolhead.position.z + 20 > printer.toolhead.axis_maximum.z %} ; check if z movement will be out of range
    G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} Z{printer.toolhead.axis_maximum.z} F21000 ; if yes, move z to max position
  {% else %}
    G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} Z{printer.toolhead.position.z + 20} F21000 ; if no, add 20mm to current position and move there
  {% endif %}
  ; M84 ; disable motors

[gcode_macro CANCEL_PRINT]
description: Cancel the running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  M220 S100 ; Reset Speed factor override percentage to default (100%)
  M221 S100 ; Reset Extrude factor override percentage to default (100%)
   
  {% if printer.extruder.can_extrude|lower == 'true' %}
  M83
  G0 E-4 F100 ; don't drip
  M82
  {% endif %}
  ## Move head and retract only if not already in the pause state and park set to true  
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    PARK_TOOLHEAD
  {% endif %}

  ; TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PARK_TOOLHEAD]
description: Park toolhead when pausing or cancelling printing
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg  
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}

  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}

  ##### end of definitions #####

  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro GET_TO_WIPER]
gcode:
  G1 Z40 F6000
  G1 X0 Y290 F6000
  G1 Z25 F6000

[gcode_macro WIPE_NOZZLE]
gcode:
    {% if printer.toolhead.homed_axes == "xyz" %} ; Check if printer is homed
      G90 ; Absolute positioning
      G0 F21000 ; Set the speed to 350 mm/s
      G0 Z30 ; Move Z to 30
      G0 X0 Y290 ; Move to 0:290
      
      G0 Z16 ; Move z to 16
      G91 ; Relative positioning
      {% for i in range (3)%} ; For loop to do the code 3 times
        G0 Z3 F1500 ; Wipe up and down while moving to the right
        G0 Z-3
        G0 X3 F10000
      {% endfor %}
      G90 ; Absolute positioning
      G0 X0 F10000 ; Return X to zero
      G91 ; Relative positioning
      {% for i in range (3)%} ; For loop to do the code 3 times
        G0 X10 F10000 ; Quickly wipe left to right
        G0 X-10
      {% endfor %}	
      G90 ; Absolute positioning
      G0 Z18 ; Move Z to 18
      {% for x in [0, 2, 4, 6, 8, 10]%} ; For loop to cycle x through 6 values
        G0 X{x} Y290 F10000 ; Wipe with long strokes along Y axis, while shifting by 2 mm along X
        G0 X{x} Y260
      {% endfor %}
      G0 Y220 ; Finish wiping
    {% else %}
      {action_respond_info("Not homed, not wiping")} ; Respond with an error if printer is not homed
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91 
    G1 E-20 F300
    G1 E-120 F2100

[gcode_macro LOAD_FILAMENT]
gcode:
    G91 
    G1 E100 F2100
    G1 E49 F300
    G1 E-0.7 F2100

[gcode_macro CENTRE_EXTRUDER]
gcode:
    G90
    G0 X150 Y150 Z10 F6000

[gcode_macro CHANGE_NOZZLE]
gcode:
    {% set accel = printer.toolhead.max_accel %}
    G90
    SET_VELOCITY_LIMIT ACCEL=100
    G0 X150 Y150 Z200 F12000
    SET_VELOCITY_LIMIT ACCEL={accel}

[gcode_macro CLEAN_NOZZLE]
gcode:
    {% set accel = printer.toolhead.max_accel %}
    G90
    SET_VELOCITY_LIMIT ACCEL=100
    G0 X150 Y0 Z100 F12000
    SET_VELOCITY_LIMIT ACCEL={accel}
